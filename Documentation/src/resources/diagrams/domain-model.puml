@startuml domain model

hide class circle
hide empty methods
hide empty fields

abstract class Player {
}

class Table {
    name
}

class Game {
    startTime
    endTime
}

class GameStatistics {
    totalScore
    averageRoundScore
}

note right
    Team score is calculated
    by summing up scores
    of the rounds in which
    they were able to choose
    the game type.
end note

class RegisteredPlayer {
    username
    password
    displayName
}

class PlayerStatistics {
    averageGameScore
    averageRoundScore
}

note bottom
    Player round score is calculated
    by averaging the score of each
    round in which the player
    was able to choose the game type
end note

class GameParticipation {
    playerName
    tablePosition
}

note left of GameParticipation::playerName
    For registered players
    playerName defaults to
    displayName or username
end note

class Round {
    number
    score
}

class Contract {
    multiplier
    name
}

class Team {
}

class GameHighlight {
}

class GameHighlightType {
}

enum ContractType {
    ACORNS
    ROSES
    SHIELDS
    BELLS
    TOPS_DOWN
    BOTTOMS_UP
    JOKER
    SLALOM
    GUSCHTI
}

Player <|-- RegisteredPlayer
Player <|-- GuestPlayer
Player "1" -- "*" GameParticipation
Team "1" -- "2" GameParticipation
note on link
    Team mates must be
    diagonally opposite
    on table
end note

Player "1" -- "*" Table : owns >
Table "1" -- "*" Game : is played on <

Game "1" --  "2" Team  : compete in <
Game "1" *-- "0..20" Round
Contract "1" --u "*" Round  : contract
note on link
    Each contract can only
    be used once by each team
end note
ContractType "1" --l "*" Contract : type

GameParticipation "1" --r "0..10" Round : chooses contract of >

GameParticipation "1" -- "0..1" GameHighlight : highlight
note on link
    Determined when
    game is completed
end note
GameHighlightType "1" --l "*" GameHighlight  : type

Team "1" --u  "1" GameStatistics
Player "1" -r- "1"PlayerStatistics

@enduml
