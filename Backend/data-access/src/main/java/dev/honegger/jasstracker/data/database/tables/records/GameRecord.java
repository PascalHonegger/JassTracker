/*
 * This file is generated by jOOQ.
 */
package dev.honegger.jasstracker.data.database.tables.records;


import dev.honegger.jasstracker.data.database.tables.Game;

import java.util.UUID;

import kotlinx.datetime.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class GameRecord extends UpdatableRecordImpl<GameRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.game.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.game.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.game.start_time</code>.
     */
    public void setStartTime(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.game.start_time</code>.
     */
    public LocalDateTime getStartTime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.game.end_time</code>.
     */
    public void setEndTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.game.end_time</code>.
     */
    public LocalDateTime getEndTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.game.table_id</code>.
     */
    public void setTableId(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.game.table_id</code>.
     */
    public UUID getTableId() {
        return (UUID) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GameRecord
     */
    public GameRecord() {
        super(Game.GAME);
    }

    /**
     * Create a detached, initialised GameRecord
     */
    public GameRecord(UUID id, LocalDateTime startTime, LocalDateTime endTime, UUID tableId) {
        super(Game.GAME);

        setId(id);
        setStartTime(startTime);
        setEndTime(endTime);
        setTableId(tableId);
        resetTouchedOnNotNull();
    }
}
