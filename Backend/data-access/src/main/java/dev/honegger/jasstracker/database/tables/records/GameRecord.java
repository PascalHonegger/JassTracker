/*
 * This file is generated by jOOQ.
 */
package dev.honegger.jasstracker.database.tables.records;


import dev.honegger.jasstracker.database.tables.Game;

import java.util.UUID;

import kotlinx.datetime.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GameRecord extends UpdatableRecordImpl<GameRecord> implements Record4<UUID, LocalDateTime, LocalDateTime, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.game.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.game.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.game.start_time</code>.
     */
    public void setStartTime(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.game.start_time</code>.
     */
    public LocalDateTime getStartTime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.game.end_time</code>.
     */
    public void setEndTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.game.end_time</code>.
     */
    public LocalDateTime getEndTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.game.table_id</code>.
     */
    public void setTableId(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.game.table_id</code>.
     */
    public UUID getTableId() {
        return (UUID) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, LocalDateTime, LocalDateTime, UUID> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, LocalDateTime, LocalDateTime, UUID> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Game.GAME.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Game.GAME.START_TIME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Game.GAME.END_TIME;
    }

    @Override
    public Field<UUID> field4() {
        return Game.GAME.TABLE_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getStartTime();
    }

    @Override
    public LocalDateTime component3() {
        return getEndTime();
    }

    @Override
    public UUID component4() {
        return getTableId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getStartTime();
    }

    @Override
    public LocalDateTime value3() {
        return getEndTime();
    }

    @Override
    public UUID value4() {
        return getTableId();
    }

    @Override
    public GameRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public GameRecord value2(LocalDateTime value) {
        setStartTime(value);
        return this;
    }

    @Override
    public GameRecord value3(LocalDateTime value) {
        setEndTime(value);
        return this;
    }

    @Override
    public GameRecord value4(UUID value) {
        setTableId(value);
        return this;
    }

    @Override
    public GameRecord values(UUID value1, LocalDateTime value2, LocalDateTime value3, UUID value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GameRecord
     */
    public GameRecord() {
        super(Game.GAME);
    }

    /**
     * Create a detached, initialised GameRecord
     */
    public GameRecord(UUID id, LocalDateTime startTime, LocalDateTime endTime, UUID tableId) {
        super(Game.GAME);

        setId(id);
        setStartTime(startTime);
        setEndTime(endTime);
        setTableId(tableId);
    }
}
