/*
 * This file is generated by jOOQ.
 */
package dev.honegger.jasstracker.data.database.tables.records;


import dev.honegger.jasstracker.data.database.enums.ContractType;
import dev.honegger.jasstracker.data.database.tables.Contract;

import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ContractRecord extends UpdatableRecordImpl<ContractRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.contract.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.contract.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.contract.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.contract.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.contract.multiplier</code>.
     */
    public void setMultiplier(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.contract.multiplier</code>.
     */
    public Integer getMultiplier() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.contract.type</code>.
     */
    public void setType(ContractType value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.contract.type</code>.
     */
    public ContractType getType() {
        return (ContractType) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ContractRecord
     */
    public ContractRecord() {
        super(Contract.CONTRACT);
    }

    /**
     * Create a detached, initialised ContractRecord
     */
    public ContractRecord(UUID id, String name, Integer multiplier, ContractType type) {
        super(Contract.CONTRACT);

        setId(id);
        setName(name);
        setMultiplier(multiplier);
        setType(type);
        resetTouchedOnNotNull();
    }
}
