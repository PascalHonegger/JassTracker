/*
 * This file is generated by jOOQ.
 */
package dev.honegger.jasstracker.database.tables.records;


import dev.honegger.jasstracker.database.tables.Player;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerRecord extends UpdatableRecordImpl<PlayerRecord> implements Record5<UUID, String, String, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.player.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.player.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.player.username</code>.
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.player.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.player.display_name</code>.
     */
    public void setDisplayName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.player.display_name</code>.
     */
    public String getDisplayName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.player.password</code>.
     */
    public void setPassword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.player.password</code>.
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.player.is_guest</code>.
     */
    public void setIsGuest(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.player.is_guest</code>.
     */
    public Boolean getIsGuest() {
        return (Boolean) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, String, String, String, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, String, String, String, Boolean> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Player.PLAYER.ID;
    }

    @Override
    public Field<String> field2() {
        return Player.PLAYER.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return Player.PLAYER.DISPLAY_NAME;
    }

    @Override
    public Field<String> field4() {
        return Player.PLAYER.PASSWORD;
    }

    @Override
    public Field<Boolean> field5() {
        return Player.PLAYER.IS_GUEST;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getDisplayName();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public Boolean component5() {
        return getIsGuest();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getDisplayName();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public Boolean value5() {
        return getIsGuest();
    }

    @Override
    public PlayerRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public PlayerRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public PlayerRecord value3(String value) {
        setDisplayName(value);
        return this;
    }

    @Override
    public PlayerRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public PlayerRecord value5(Boolean value) {
        setIsGuest(value);
        return this;
    }

    @Override
    public PlayerRecord values(UUID value1, String value2, String value3, String value4, Boolean value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayerRecord
     */
    public PlayerRecord() {
        super(Player.PLAYER);
    }

    /**
     * Create a detached, initialised PlayerRecord
     */
    public PlayerRecord(UUID id, String username, String displayName, String password, Boolean isGuest) {
        super(Player.PLAYER);

        setId(id);
        setUsername(username);
        setDisplayName(displayName);
        setPassword(password);
        setIsGuest(isGuest);
    }
}
