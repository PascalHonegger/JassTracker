/*
 * This file is generated by jOOQ.
 */
package dev.honegger.jasstracker.data.database.tables.records;


import dev.honegger.jasstracker.data.database.tables.Table;

import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TableRecord extends UpdatableRecordImpl<TableRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.table.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.table.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.table.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.table.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.table.owner_id</code>.
     */
    public void setOwnerId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.table.owner_id</code>.
     */
    public UUID getOwnerId() {
        return (UUID) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TableRecord
     */
    public TableRecord() {
        super(Table.TABLE);
    }

    /**
     * Create a detached, initialised TableRecord
     */
    public TableRecord(UUID id, String name, UUID ownerId) {
        super(Table.TABLE);

        setId(id);
        setName(name);
        setOwnerId(ownerId);
        resetTouchedOnNotNull();
    }
}
