/*
 * This file is generated by jOOQ.
 */
package dev.honegger.jasstracker.data.database.tables.records;


import dev.honegger.jasstracker.data.database.tables.Round;

import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RoundRecord extends UpdatableRecordImpl<RoundRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.round.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.round.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.round.number</code>.
     */
    public void setNumber(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.round.number</code>.
     */
    public Integer getNumber() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.round.score</code>.
     */
    public void setScore(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.round.score</code>.
     */
    public Integer getScore() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.round.game_id</code>.
     */
    public void setGameId(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.round.game_id</code>.
     */
    public UUID getGameId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.round.player_id</code>.
     */
    public void setPlayerId(UUID value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.round.player_id</code>.
     */
    public UUID getPlayerId() {
        return (UUID) get(4);
    }

    /**
     * Setter for <code>public.round.contract_id</code>.
     */
    public void setContractId(UUID value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.round.contract_id</code>.
     */
    public UUID getContractId() {
        return (UUID) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoundRecord
     */
    public RoundRecord() {
        super(Round.ROUND);
    }

    /**
     * Create a detached, initialised RoundRecord
     */
    public RoundRecord(UUID id, Integer number, Integer score, UUID gameId, UUID playerId, UUID contractId) {
        super(Round.ROUND);

        setId(id);
        setNumber(number);
        setScore(score);
        setGameId(gameId);
        setPlayerId(playerId);
        setContractId(contractId);
        resetTouchedOnNotNull();
    }
}
